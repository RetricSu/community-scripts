name: Daily SDK Validation
on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:  # Manual trigger
  pull_request:
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/sdk-validation.yml'
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/sdk-validation.yml'

jobs:
  validate-sdks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build project
        run: pnpm run build
        
      - name: Run SDK discovery
        run:  pnpm run discover
        
      - name: Run daily SDK validation
        run: pnpm run daily
        
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: sdk-validation-results
          path: results/
          retention-days: 30
          
      - name: Comment on PR (if triggered by PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summaryPath = './results/latest-summary.json';
            
            try {
              if (fs.existsSync(summaryPath)) {
                const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf-8'));
                
                const comment = `## SDK Validation Results
                
                **Summary:**
                - Total SDKs tested: ${summary.totalSDKs || 0}
                - Successful: ${summary.successfulSDKs || 0}
                - Failed: ${summary.failedSDKs || 0}
                - Success rate: ${(summary.successRate || 0).toFixed(1)}%
                - Total tests: ${summary.totalTests || 0}
                - Passed tests: ${summary.passedTests || 0}
                - Failed tests: ${summary.failedTests || 0}
                - Duration: ${((summary.duration || 0) / 1000).toFixed(1)}s
                
                View detailed results: ${context.payload.repository.html_url}/actions/runs/${context.runId}
                `;
                
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              } else {
                console.log('Summary file not found, skipping PR comment');
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: '## SDK Validation Results\n\n❌ No validation results found. Check the [workflow run](' + context.payload.repository.html_url + '/actions/runs/' + context.runId + ') for details.'
                });
              }
            } catch (error) {
              console.error('Error posting PR comment:', error);
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '## SDK Validation Results\n\n❌ Error reading validation results. Check the [workflow run](' + context.payload.repository.html_url + '/actions/runs/' + context.runId + ') for details.'
              });
            }
