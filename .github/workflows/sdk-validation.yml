name: Daily SDK Validation
on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/sdk-validation.yml'

jobs:
  validate-sdks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build project
        run: npm run build
        
      - name: Run SDK discovery
        run: npm run discover
        
      - name: Run daily SDK validation
        run: npm run daily
        
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: sdk-validation-results
          path: results/
          retention-days: 30
          
      - name: Comment on PR (if triggered by PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summaryPath = './results/latest-summary.json';
            
            if (fs.existsSync(summaryPath)) {
              const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf-8'));
              
              const comment = `## SDK Validation Results
              
              **Summary:**
              - Total SDKs tested: ${summary.totalSDKs}
              - Successful: ${summary.successfulSDKs}
              - Failed: ${summary.failedSDKs}
              - Success rate: ${summary.successRate.toFixed(1)}%
              - Total tests: ${summary.totalTests}
              - Passed tests: ${summary.passedTests}
              - Failed tests: ${summary.failedTests}
              - Duration: ${(summary.duration / 1000).toFixed(1)}s
              
              [View detailed results](${github.server_url}/${github.repository}/actions/runs/${github.run_id})
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } 
